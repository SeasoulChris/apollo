syntax = "proto3";

package apollo.fuelation;

import "fueling/learning/autotuner/proto/git_info.proto";

service SimService {
  rpc TriggerBuildJob(GitInfo) returns (Status) {
  }
  rpc RunScenario(JobInfo) returns (Status) {
  }
}

enum DynamicModel {
  PERFECT_CONTROL = 0;
  POINT_MASS = 1;
  INTELLI_LINCOLN = 2;
  INTELLI_COOLHIGH = 3;
  ECHO_LINCOLN = 4;
  CASCADED_MODEL = 5;
}

message JobInfo {
  GitInfo git_info = 1;
  int32 scenario =
      2;  // number indicating which worldsim scenario should be run
  map<string, string> model_config =
      3;  // map from local config file path to serialized config
  string record_output_path = 4;  // storage path for output record file
  string record_output_filename =
      5;                   // storage file name for output record file
  string training_id = 6;  // used to identify which training task it belongs to
  DynamicModel dynamic_model = 7;
}

message Status {
  int32 code = 1;
  string message = 2;
}
