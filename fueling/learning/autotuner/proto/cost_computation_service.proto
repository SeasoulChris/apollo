syntax = "proto3";

package apollo.fuelation;

import "fueling/learning/autotuner/proto/git_info.proto";
import "fueling/learning/autotuner/proto/sim_service.proto";

service CostComputation {
  rpc ComputeMracCost(Request) returns (Response) {
  }
}

message ModelConfig {
  map<string, string> model_config =
      1;  // map from local config file path to serialized config
}

message Request {
  GitInfo git_info = 1;
  map<string, ModelConfig> config = 2;  // config_id -> model_config
  repeated uint32 scenario_id = 3;
}

message Response {
  Status status = 1;
  map<string, float> score = 2;  // config_id -> weighted score
  string training_id = 3;
}
