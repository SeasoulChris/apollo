syntax = "proto2";

package apollo_fuel.fueling.profiling.proto.control_profiling;


message ControlProfiling {
    enum DrivingMode {
      COMPLETE_MANUAL = 0;  // human drive
      COMPLETE_AUTO_DRIVE = 1;
      AUTO_STEER_ONLY = 2;  // only steer
      AUTO_SPEED_ONLY = 3;  // include throttle and brake
      // security mode when manual intervention happens, only response status
      EMERGENCY_MODE = 4;
    }
    enum GearPosition {
      GEAR_NEUTRAL = 0;
      GEAR_DRIVE = 1;
      GEAR_REVERSE = 2;
      GEAR_PARKING = 3;
      GEAR_LOW = 4;
      GEAR_INVALID = 5;
      GEAR_NONE = 6;
    }
    enum ErrorCode {
      // No error, returns on success.
      OK = 0;
      // Control module error codes start from here.
      CONTROL_ERROR = 1000;
      CONTROL_INIT_ERROR = 1001;
      CONTROL_COMPUTE_ERROR = 1002;
      CONTROL_ESTOP_ERROR = 1003;
    }
    optional string vehicle_type = 1;
    optional string controller_type = 2;
    optional double vehicle_wheelbase = 3 [default = 2.8448];  // by default, Mkz
    optional DrivingMode driving_mode = 4;
    repeated GearPosition gear_position = 5;
    optional ErrorCode control_error_code = 6;

    message ControlMetrics {
        optional double acceleration_harsh_limit = 1;
        optional double curvature_harsh_limit = 2;

        optional double speed_stop = 3;

        optional double speed_still = 4;
        optional double heading_error_still = 5;
        optional double curvature_still = 6;

        optional double station_error_thold = 7;
        optional double speed_error_thold = 8;
        optional double lateral_error_thold = 9;
        optional double lateral_error_rate_thold = 10;
        optional double heading_error_thold = 11;
        optional double heading_error_rate_thold = 12;

        optional double acceleration_thold = 13;
        optional double jerk_thold = 14;
        optional double lat_acceleration_thold = 15;
        optional double lat_jerk_thold = 16;
        optional double heading_acceleration_thold = 17;
        optional double heading_jerk_thold = 18;
        optional ErrorCode control_error_thold = 19;
    }

    optional ControlMetrics control_metrics = 7;

    optional double control_period = 8;
    optional double control_frame_num = 9;
    optional double control_command_pct = 10;
    optional double total_time_factor = 11;
    optional double min_sample_size = 12;
}
