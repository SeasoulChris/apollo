syntax = "proto3";

package afs_data_service; 

service AfsDataTransfer{
  rpc Scan(ScanRequest) returns (ScanResponse) {}
  rpc ReadMessages(ReadMessagesRequest) returns (stream ReadMessagesResponse) {}
}

message ScanRequest {
  string table_name = 1; // adb table name, e.g.: kinglong/auto_car/cyberecord
  string where = 2; // scan condition, e.g.: task_id = MKZ053_20200108165555 and xxx = yyy
  string columns = 3; // scan columns, separated by commam e.g.: meta.task_id, default scan all columns
  string order = 4; // scan result order by column, e.g.: meta.task_id
  uint32 limit = 5; // scan limit count
}

message ScanResponseItem {
  string rowKey = 1;
  string task_id = 2;
  uint32 start_time = 3;
  uint32 end_time = 4;
}

message ScanResponse {
  repeated ScanResponseItem records = 1;
}

message ReadMessagesRequest {
  string task_id = 1;
  string topics = 2; // e.g.:  '/sensor/gnss/raw_data,/pnc/carstatus'ï¼Œdefault all topics
  uint32 start_time_second = 3;
  uint32 end_time_second = 4;
  string namespace = 5; // e.g.: 'kinglong/auto_car'
  bool with_data = 6; // True: return message content; default false.
  string skip_topics = 7; // Skip the specified topics, default ''.  This overwrites the "topics"
}

message ReadMessagesResponse {
  string topic = 1;
  bytes message = 2;
  uint32 message_size = 3;
  string data_type = 4;
  uint64 timestamp = 5;
}


