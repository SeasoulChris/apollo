syntax = "proto2";

package apollo.data.fuel;

// https://spark.apache.org/docs/latest/submitting-applications.html
message SparkSubmitArg {
  optional User user = 1;
  optional Env env = 2;
  optional Job job = 3;
  optional Worker worker = 4;
  optional Partner partner = 5;
  optional Driver driver = 6;
}

// Will be stored in MongoDB.
message JobRecord {
  optional string id = 1;
  optional SparkSubmitArg arg = 2;
  enum Status {
    SUBMITTED = 0;
    ALIVE = 1;  // Means we can see it in "kubectl get pods".
    DELETED = 2;
  }
  optional Status status = 3;
  optional string alive_status = 4;  // Result of "kubectl get pods <driver>".
}

message User {
  // 1. We will check if the submitter has the permission to run as the role.
  // 2. Then we will check if the role has the permission to run the job.
  // 3. On dashboard, all the role owners could manage the job.
  // 4. If the role is not given, the submitter just runs as himself.
  optional string submitter = 1;
  optional string running_role = 2;
}

message Env {
  optional string docker_image = 1 [default = "hub.baidubce.com/apollofuel/spark:latest"];

  enum NodeSelector {
    ANY = 0;
    FOR_FUEL = 1;
    FOR_OPEN_SERVICES = 2;
    FOR_SIMULATION = 3;
  }
  optional NodeSelector node_selector = 3;

  enum LogVerbosity {
    INFO = 0;
    DEBUG = 1;
    WARN = 2;
    ERROR = 3;
    FATAL = 4;
  }
  optional LogVerbosity log_verbosity = 4;

  reserved 2;
}

message Job {
  optional string entrypoint = 1;
  optional string flags = 2;

  oneof fueling_pkg {
    // Content of fueling.zip.
    string fueling_zip_base64 = 3;
    // Path of fueling.zip which is already in cloud. It can be generated with ./deploy/release.sh.
    string fueling_zip_path = 4 [default = "/mnt/bos/modules/data/jobs/deploy/fueling-latest.zip"];
  }
}

message Worker {
  optional uint32 count = 1 [default = 1];
  optional uint32 cpu = 2 [default = 1];
  optional uint32 memory = 3 [default = 16];  // In GB.
  optional uint32 disk = 4 [default = 50];  // In GB.
  optional uint32 gpu = 5 [default = 0];
}

message Driver {
  optional uint32 driver_memory = 1 [default = 2];  // In GB.
}

// Baidu BOS is an S3-compatible object storage.
// For more information, please visit https://cloud.baidu.com/doc/BOS/index.html
message BosConfig {
  optional string bucket = 1;
  optional string access_key = 2;
  optional string secret_key = 3;

  // It's required to provide correct BOS region. Please read the document
  // https://cloud.baidu.com/doc/BOS/S3.html#.E6.9C.8D.E5.8A.A1.E5.9F.9F.E5.90.8D
  // and check your configuration.
  optional string region = 4 [default = "bj"];
}

message Partner {
  // Be cautious! This could be risky.
  optional bool storage_writable = 1;
  optional BosConfig bos = 2;
}
